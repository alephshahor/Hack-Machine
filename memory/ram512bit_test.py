import sys
from ram512bit import RAM512Bit

# MEMORY 0
test_input =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
               [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]
test_address = [[0,0,0, 0,0,0, 0,0,0], [0,0,0, 0,0,0, 0,0,1], [0,0,0, 0,0,0, 0,1,0], [0,0,0, 0,0,0, 0,1,1], [0,0,0, 0,0,0, 1,0,0], [0,0,0, 0,0,0, 1,0,1], [0,0,0, 0,0,0, 1,1,0], [0,0,0, 0,0,0, 1,1,1],
                [0,0,0, 0,0,0, 0,0,0], [0,0,0, 0,0,0, 0,0,1], [0,0,0, 0,0,0, 0,1,0], [0,0,0, 0,0,0, 0,1,1], [0,0,0, 0,0,0, 1,0,0], [0,0,0, 0,0,0, 1,0,1], [0,0,0, 0,0,0, 1,1,0], [0,0,0, 0,0,0, 1,1,1]]
test_load  =   [1,1,1,1,1,1,1,1,
                0,0,0,0,0,0,0,0]
test_output = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]]

ram512Bit = RAM512Bit()

for i in range(len(test_input)):

    result = ram512Bit.compute(test_input[i], test_address[i], test_load[i])
    if result != test_output[i]:
        sys.exit('Error, in[{}], address[{}], load[{}] should output: [{}] but got: [{}]'
           .format(test_input[i], test_address[i], test_load[i], test_output[i], result))


# MEMORY 7

test_input =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
               [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]
test_address = [[0,0,0, 1,1,1, 0,0,0], [0,0,0, 1,1,1, 0,0,1], [0,0,0, 1,1,1, 0,1,0], [0,0,0, 1,1,1, 0,1,1], [0,0,0, 1,1,1, 1,0,0], [0,0,0, 1,1,1, 1,0,1], [0,0,0, 1,1,1, 1,1,0], [0,0,0, 1,1,1, 1,1,1],
                [0,0,0, 1,1,1, 0,0,0], [0,0,0, 1,1,1, 0,0,1], [0,0,0, 1,1,1, 0,1,0], [0,0,0, 1,1,1, 0,1,1], [0,0,0, 1,1,1, 1,0,0], [0,0,0, 1,1,1, 1,0,1], [0,0,0, 1,1,1, 1,1,0], [0,0,0, 1,1,1, 1,1,1]]
test_load  =   [1,1,1,1,1,1,1,1,
                0,0,0,0,0,0,0,0]
test_output = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]]

for i in range(len(test_input)):

    result = ram512Bit.compute(test_input[i], test_address[i], test_load[i])
    if result != test_output[i]:
        sys.exit('Error, in[{}], address[{}], load[{}] should output: [{}] but got: [{}]'
           .format(test_input[i], test_address[i], test_load[i], test_output[i], result))

# MEMORY 16

test_input =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
               [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]
test_address = [[0,0,1, 0,0,0, 0,0,0], [0,0,1, 0,0,0, 0,0,1], [0,0,1, 0,0,0, 0,1,0], [0,0,1, 0,0,0, 0,1,1], [0,0,1, 0,0,0, 1,0,0], [0,0,1, 0,0,0, 1,0,1], [0,0,1, 0,0,0, 1,1,0], [0,0,1, 0,0,0, 1,1,1],
                [0,0,1, 0,0,0, 0,0,0], [0,0,1, 0,0,0, 0,0,1], [0,0,1, 0,0,0, 0,1,0], [0,0,1, 0,0,0, 0,1,1], [0,0,1, 0,0,0, 1,0,0], [0,0,1, 0,0,0, 1,0,1], [0,0,1, 0,0,0, 1,1,0], [0,0,1, 0,0,0, 1,1,1]]
test_load  =   [1,1,1,1,1,1,1,1,
                0,0,0,0,0,0,0,0]
test_output = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]]

for i in range(len(test_input)):

    result = ram512Bit.compute(test_input[i], test_address[i], test_load[i])
    if result != test_output[i]:
        sys.exit('Error, in[{}], address[{}], load[{}] should output: [{}] but got: [{}]'
           .format(test_input[i], test_address[i], test_load[i], test_output[i], result))

# MEMORY 32

test_input =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
               [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]
test_address = [[0,1,0, 0,0,0, 0,0,0], [0,1,0, 0,0,0, 0,0,1], [0,1,0, 0,0,0, 0,1,0], [0,1,0, 0,0,0, 0,1,1], [0,1,0, 0,0,0, 1,0,0], [0,1,0, 0,0,0, 1,0,1], [0,1,0, 0,0,0, 1,1,0], [0,1,0, 0,0,0, 1,1,1],
                [0,1,0, 0,0,0, 0,0,0], [0,1,0, 0,0,0, 0,0,1], [0,1,0, 0,0,0, 0,1,0], [0,1,0, 0,0,0, 0,1,1], [0,1,0, 0,0,0, 1,0,0], [0,1,0, 0,0,0, 1,0,1], [0,1,0, 0,0,0, 1,1,0], [0,1,0, 0,0,0, 1,1,1]]
test_load  =   [1,1,1,1,1,1,1,1,
                0,0,0,0,0,0,0,0]
test_output = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]]

for i in range(len(test_input)):

    result = ram512Bit.compute(test_input[i], test_address[i], test_load[i])
    if result != test_output[i]:
        sys.exit('Error, in[{}], address[{}], load[{}] should output: [{}] but got: [{}]'
           .format(test_input[i], test_address[i], test_load[i], test_output[i], result))

# MEMORY 64

test_input =  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],
               [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]
test_address = [[1,0,0, 0,0,0, 0,0,0], [1,0,0, 0,0,0, 0,0,1], [1,0,0, 0,0,0, 0,1,0], [1,0,0, 0,0,0, 0,1,1], [1,0,0, 0,0,0, 1,0,0], [1,0,0, 0,0,0, 1,0,1], [1,0,0, 0,0,0, 1,1,0], [1,0,0, 0,0,0, 1,1,1],
                [1,0,0, 0,0,0, 0,0,0], [1,0,0, 0,0,0, 0,0,1], [1,0,0, 0,0,0, 0,1,0], [1,0,0, 0,0,0, 0,1,1], [1,0,0, 0,0,0, 1,0,0], [1,0,0, 0,0,0, 1,0,1], [1,0,0, 0,0,0, 1,1,0], [1,0,0, 0,0,0, 1,1,1]]
test_load  =   [1,1,1,1,1,1,1,1,
                0,0,0,0,0,0,0,0]
test_output = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0], [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1], [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]]

for i in range(len(test_input)):

    result = ram512Bit.compute(test_input[i], test_address[i], test_load[i])
    if result != test_output[i]:
        sys.exit('Error, in[{}], address[{}], load[{}] should output: [{}] but got: [{}]'
           .format(test_input[i], test_address[i], test_load[i], test_output[i], result))

print("Test for RAM512 passed successfully")
